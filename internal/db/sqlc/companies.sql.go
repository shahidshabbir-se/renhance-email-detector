// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: companies.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createCompany = `-- name: CreateCompany :one
INSERT INTO companies (
    domain, organization, description, country, city
) VALUES (
    $1, $2, $3, $4, $5
)
RETURNING id, domain, organization, description, country, city, created_at
`

type CreateCompanyParams struct {
	Domain       string
	Organization pgtype.Text
	Description  pgtype.Text
	Country      pgtype.Text
	City         pgtype.Text
}

func (q *Queries) CreateCompany(ctx context.Context, arg CreateCompanyParams) (Company, error) {
	row := q.db.QueryRow(ctx, createCompany,
		arg.Domain,
		arg.Organization,
		arg.Description,
		arg.Country,
		arg.City,
	)
	var i Company
	err := row.Scan(
		&i.ID,
		&i.Domain,
		&i.Organization,
		&i.Description,
		&i.Country,
		&i.City,
		&i.CreatedAt,
	)
	return i, err
}

const getCompanyByDomain = `-- name: GetCompanyByDomain :one
SELECT id, domain, organization, description, country, city, created_at FROM companies
WHERE domain = $1
`

func (q *Queries) GetCompanyByDomain(ctx context.Context, domain string) (Company, error) {
	row := q.db.QueryRow(ctx, getCompanyByDomain, domain)
	var i Company
	err := row.Scan(
		&i.ID,
		&i.Domain,
		&i.Organization,
		&i.Description,
		&i.Country,
		&i.City,
		&i.CreatedAt,
	)
	return i, err
}
