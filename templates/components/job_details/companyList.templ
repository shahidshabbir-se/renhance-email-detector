package jobdetails

import (
	"encoding/json" // Import the json package
	"github.com/shahidshabbir-se/renhance-email-detector/internal/types"
)

templ CompanyList(contacts []types.Contact) {
	<div
		class="bg-gradient-to-br from-primary to-white dark:from-primary border  border-zinc-200 dark:border-zinc-800 max-h-[375px] overflow-y-auto w-full p-6 rounded-xl shadow-md space-y-4 animate-fade-in-up"
	>
		<h2 class="text-xl md:text-2xl font-bold text-gray-900 dark:text-white">Company Contacts</h2>
		<ul
			class="max-h-[400px] space-y-3 pr-2 scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100 dark:scrollbar-thumb-zinc-700 dark:scrollbar-track-zinc-900"
		>
			for _, contact := range contacts {
				if contact.FirstName != nil && contact.LastName != nil {
					<li
						class="group cursor-pointer p-4 rounded-lg bg-gray-50 dark:bg-zinc-700 hover:bg-blue-50 dark:hover:bg-blue-900 transition-all duration-300 transform hover:-translate-y-0.5 hover:shadow-md"
					>
						<div
							class="flex flex-col sm:flex-row justify-between items-start sm:items-center text-gray-800 dark:text-gray-200"
						>
							<div class="flex-grow text-left">
								<p
									class="font-semibold text-lg text-gray-900 dark:text-white group-hover:text-blue-700 dark:group-hover:text-blue-400 transition-colors"
								>
									{ *contact.FirstName } { *contact.LastName }
								</p>
							</div>
							<div class="mt-2 sm:mt-0 sm:ml-4 text-right">
								<button
									@click={ "open = true; selected = " + contactToJSON(contact) }
									class="inline-flex items-center px-4 py-2 bg-blue-600 text-white font-medium rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200 text-sm"
								>
									<svg
										class="w-4 h-4 mr-1 -ml-1"
										fill="none"
										stroke="currentColor"
										viewBox="0 0 24 24"
										xmlns="http://www.w3.org/2000/svg"
									>
										<path
											stroke-linecap="round"
											stroke-linejoin="round"
											stroke-width="2"
											d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
										></path>
										<path
											stroke-linecap="round"
											stroke-linejoin="round"
											stroke-width="2"
											d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
										></path>
									</svg>
									View Details
								</button>
							</div>
						</div>
					</li>
				}
			}
		</ul>
	</div>
}

func contactToJSON(contact types.Contact) string {
	data := struct {
		ID         int     `json:"ID"`
		Email      string  `json:"Email"`
		FirstName  *string `json:"FirstName,omitempty"`
		LastName   *string `json:"LastName,omitempty"`
		Position   *string `json:"Position,omitempty"`
		Department *string `json:"Department,omitempty"`
		LinkedIn   *string `json:"LinkedIn,omitempty"`
		Username   *string `json:"Username,omitempty"` // Added Username to JSON for modal
	}{
		ID:         contact.ID,
		Email:      contact.Email,
		FirstName:  contact.FirstName,
		LastName:   contact.LastName,
		Position:   contact.Position,
		Department: contact.Department,
		LinkedIn:   contact.LinkedIn,
	}

	jsonData, err := json.Marshal(data)
	if err != nil {
		return "{}"
	}
	return string(jsonData)
}
